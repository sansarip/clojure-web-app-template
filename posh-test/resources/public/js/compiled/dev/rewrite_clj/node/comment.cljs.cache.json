["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.comment","~:imports",null,"~:requires",["^ ","~$node","~$rewrite-clj.node.protocols","^<","^<"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$CommentNode",["^ ","~:num-fields",1,"~:protocols",["^6",["~$cljs.core/IRecord","~$rewrite-clj.node.comment/Object","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^7","~$rewrite-clj.node.comment/CommentNode","~:file","resources/public/js/compiled/dev/rewrite_clj/node/comment.cljs","~:end-column",23,"~:type",true,"~:column",12,"~:internal-ctor",true,"~:line",6,"~:record",true,"~:end-line",6,"~:tag","~$function","~:skip-protocol-flag",["^6",["^C","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^P","^Q","^R","^S"]]],"~$->CommentNode",["^ ","~:protocol-inline",null,"~:meta",["^ ","^U","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/comment.cljs","^V",23,"^X",12,"^Y",true,"~:factory","~:positional","^Z",6,"^10",6,"~:arglists",["~#list",["~$quote",["^1:",[["~$s"]]]]],"~:doc","Positional factory function for rewrite-clj.node.comment/CommentNode."],"^7","~$rewrite-clj.node.comment/->CommentNode","^U","resources/public/js/compiled/dev/rewrite_clj/node/comment.cljs","^V",23,"~:method-params",["^1:",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^X",1,"^Y",true,"~:variadic?",false,"^17","^18","^Z",6,"~:ret-tag","^T","^10",6,"~:max-fixed-arity",1,"~:fn-var",true,"^19",["^1:",["^1;",["^1:",[["~$s"]]]]],"^1<","Positional factory function for rewrite-clj.node.comment/CommentNode."],"~$map->CommentNode",["^ ","^15",null,"^16",["^ ","^U","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/comment.cljs","^V",23,"^X",12,"^Y",true,"^17","~:map","^Z",6,"^10",6,"^19",["^1:",["^1;",["^1:",[["~$G__36707"]]]]],"^1<","Factory function for rewrite-clj.node.comment/CommentNode, taking a map of keywords to field values."],"^7","~$rewrite-clj.node.comment/map->CommentNode","^U","resources/public/js/compiled/dev/rewrite_clj/node/comment.cljs","^V",23,"^1>",["^1:",[["^1G"]]],"^1?",null,"^1@",["^1:",[null,null]],"^X",1,"^Y",true,"^1A",false,"^17","^1F","^Z",6,"^1B","^T","^10",6,"^1C",1,"^1D",true,"^19",["^1:",["^1;",["^1:",[["^1G"]]]]],"^1<","Factory function for rewrite-clj.node.comment/CommentNode, taking a map of keywords to field values."],"~$comment-node",["^ ","^15",null,"^16",["^ ","^U","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/comment.cljs","^Z",25,"^X",7,"^10",25,"^V",19,"^19",["^1:",["^1;",["^1:",[["~$s"]]]]],"^1<","Create node representing an EDN comment."],"^7","~$rewrite-clj.node.comment/comment-node","^U","resources/public/js/compiled/dev/rewrite_clj/node/comment.cljs","^V",19,"^1>",["^1:",[["~$s"]]],"^1?",null,"^1@",["^1:",[null,null]],"^X",1,"^1A",false,"^Z",25,"^1B","^T","^10",25,"^1C",1,"^1D",true,"^19",["^1:",["^1;",["^1:",[["~$s"]]]]],"^1<","Create node representing an EDN comment."],"~$comment?",["^ ","^15",null,"^16",["^ ","^U","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/comment.cljs","^Z",30,"^X",7,"^10",30,"^V",15,"^19",["^1:",["^1;",["^1:",[["^;"]]]]],"^1<","Check whether a node represents a comment."],"^7","~$rewrite-clj.node.comment/comment?","^U","resources/public/js/compiled/dev/rewrite_clj/node/comment.cljs","^V",15,"^1>",["^1:",[["^;"]]],"^1?",null,"^1@",["^1:",[null,null]],"^X",1,"^1A",false,"^Z",30,"^1B","~$boolean","^10",30,"^1C",1,"^1D",true,"^19",["^1:",["^1;",["^1:",[["^;"]]]]],"^1<","Check whether a node represents a comment."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:s","~:comment","~$s"]],"~:order",["~:s","^1R","~$s"]],"^1<",null]