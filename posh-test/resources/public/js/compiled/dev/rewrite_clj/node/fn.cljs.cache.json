["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$parseInt",["^ "],"~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.fn","~:imports",null,"~:requires",["^ ","~$node","~$rewrite-clj.node.protocols","^=","^=","~$w","~$clojure.walk","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$construct-fn",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","~:line",7,"~:column",8,"~:end-line",7,"~:end-column",20,"~:private",true,"~:arglists",["~#list",["~$quote",["^L",[["~$syms","~$vararg","~$body"]]]]],"~:doc","Construct function form."],"^J",true,"^8","~$rewrite-clj.node.fn/construct-fn","^E","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",20,"~:method-params",["^L",[["^N","^O","^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^G",1,"~:variadic?",false,"^F",7,"~:ret-tag","~$cljs.core/List","^H",7,"~:max-fixed-arity",3,"~:fn-var",true,"^K",["^L",["^M",["^L",[["^N","^O","^P"]]]]],"^Q","Construct function form."],"~$sym-index",["^ ","^C",null,"^D",["^ ","^E","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",19,"^G",8,"^H",19,"^I",17,"^J",true,"^K",["^L",["^M",["^L",[["~$n"]]]]],"^Q","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"^J",true,"^8","~$rewrite-clj.node.fn/sym-index","^E","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",17,"^S",["^L",[["~$n"]]],"^T",null,"^U",["^L",[null,null]],"^G",1,"^V",false,"^F",19,"^W",["^7",["~$js","~$number"]],"^H",19,"^Y",1,"^Z",true,"^K",["^L",["^M",["^L",[["~$n"]]]]],"^Q","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"~$symbol->gensym",["^ ","^C",null,"^D",["^ ","^E","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",29,"^G",8,"^H",29,"^I",22,"^J",true,"^K",["^L",["^M",["^L",[["~$sym-seq","~$vararg?","~$max-n","~$sym"]]]]],"^Q","If symbol starting with `%`, convert to respective gensym."],"^J",true,"^8","~$rewrite-clj.node.fn/symbol->gensym","^E","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",22,"^S",["^L",[["^14","^15","^16","^17"]]],"^T",null,"^U",["^L",[null,null]],"^G",1,"^V",false,"^F",29,"^W",["^7",["~$any","~$clj-nil"]],"^H",29,"^Y",4,"^Z",true,"^K",["^L",["^M",["^L",[["^14","^15","^16","^17"]]]]],"^Q","If symbol starting with `%`, convert to respective gensym."],"~$fn-walk",["^ ","^C",null,"^D",["^ ","^E","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",42,"^G",8,"^H",42,"^I",15,"^J",true,"^K",["^L",["^M",["^L",[["~$form"]]]]],"^Q","Walk the form and create an expand function form."],"^J",true,"^8","~$rewrite-clj.node.fn/fn-walk","^E","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",15,"^S",["^L",[["^1<"]]],"^T",null,"^U",["^L",[null,null]],"^G",1,"^V",false,"^F",42,"^W","^X","^H",42,"^Y",1,"^Z",true,"^K",["^L",["^M",["^L",[["^1<"]]]]],"^Q","Walk the form and create an expand function form."],"~$FnNode",["^ ","~:num-fields",1,"~:protocols",["^7",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.fn/Object","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^8","~$rewrite-clj.node.fn/FnNode","^E","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",18,"~:type",true,"^G",12,"~:internal-ctor",true,"^F",65,"~:record",true,"^H",65,"~:tag","~$function","~:skip-protocol-flag",["^7",["^1A","^1B","^1C","^1D","^1E","^1F","^1H","^1I","^1J","^1K","^1L","^1O","^1P","^1Q","^1R"]]],"~$->FnNode",["^ ","^C",null,"^D",["^ ","^E","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",18,"^G",12,"^1U",true,"~:factory","~:positional","^F",65,"^H",65,"^K",["^L",["^M",["^L",[["~$children"]]]]],"^Q","Positional factory function for rewrite-clj.node.fn/FnNode."],"^8","~$rewrite-clj.node.fn/->FnNode","^E","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",18,"^S",["^L",[["^21"]]],"^T",null,"^U",["^L",[null,null]],"^G",1,"^1U",true,"^V",false,"^1[","^20","^F",65,"^W","^1S","^H",65,"^Y",1,"^Z",true,"^K",["^L",["^M",["^L",[["^21"]]]]],"^Q","Positional factory function for rewrite-clj.node.fn/FnNode."],"~$map->FnNode",["^ ","^C",null,"^D",["^ ","^E","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",18,"^G",12,"^1U",true,"^1[","~:map","^F",65,"^H",65,"^K",["^L",["^M",["^L",[["~$G__36610"]]]]],"^Q","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"^8","~$rewrite-clj.node.fn/map->FnNode","^E","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",18,"^S",["^L",[["^25"]]],"^T",null,"^U",["^L",[null,null]],"^G",1,"^1U",true,"^V",false,"^1[","^24","^F",65,"^W","^1S","^H",65,"^Y",1,"^Z",true,"^K",["^L",["^M",["^L",[["^25"]]]]],"^Q","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"~$fn-node",["^ ","^C",null,"^D",["^ ","^E","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",94,"^G",7,"^H",94,"^I",14,"^K",["^L",["^M",["^L",[["^21"]]]]],"^Q","Create node representing an anonymous function."],"^8","~$rewrite-clj.node.fn/fn-node","^E","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^I",14,"^S",["^L",[["^21"]]],"^T",null,"^U",["^L",[null,null]],"^G",1,"^V",false,"^F",94,"^W","^1S","^H",94,"^Y",1,"^Z",true,"^K",["^L",["^M",["^L",[["^21"]]]]],"^Q","Create node representing an anonymous function."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^7",["~$&","~:children","~:fn","~:else","^21","~$fn*"]],"~:order",["^2@","~$&","^2?","^2=","^2>","^21"]],"^Q",null]