["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:imports",null,"~:requires",["^ ","~$env","~$cljs.env","^C","^C","~$ana","~$cljs.analyzer","^E","^E"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$with-state",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","~:line",25,"~:column",11,"~:end-line",25,"~:end-column",21,"~:macro",true,"~:arglists",["~#list",["~$quote",["^S",[["~$state","~$body"]]]]],"~:doc","Run the body with the given compilation state Atom<Map>."],"^>","~$cljs.analyzer.api/with-state","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",21,"~:method-params",["^S",[["~$&form","~$&env","^U","^V"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^N",1,"~:variadic?",false,"^M",25,"^Q",true,"~:ret-tag",["^6",["~$seq","~$cljs.core/IList"]],"^O",25,"~:max-fixed-arity",4,"~:fn-var",false,"^R",["^S",["^T",["^S",[["^U","^V"]]]]],"^W","Run the body with the given compilation state Atom<Map>."],"^7",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",165,"^N",7,"^O",165,"^P",14,"^R",["^S",["^T",["^S",[["~$sym"],["^U","^18"]]]]],"^W","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","^12",false,"~:fixed-arity",2,"^16",2,"^Y",["^S",[["^18"],["^U","^18"]]],"^R",["^S",[["^18"],["^U","^18"]]],"^11",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/find-ns","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",14,"^19",["^ ","^12",false,"^1:",2,"^16",2,"^Y",["^S",[["^18"],["^U","^18"]]],"^R",["^S",[["^18"],["^U","^18"]]],"^11",["^S",[null,null]]],"^Y",["^S",[["^18"],["^U","^18"]]],"^10",null,"^1:",2,"^11",["^S",[null,null]],"^N",1,"^12",false,"~:methods",[["^ ","^1:",1,"^12",false,"~:tag","~$any"],["^ ","^1:",2,"^12",false,"^1=",["^6",[null,"^1>"]]]],"^M",165,"^O",165,"^16",2,"^17",true,"^R",["^S",[["^18"],["^U","^18"]]],"^W","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^8",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",207,"^N",7,"^O",207,"^P",16,"^R",["^S",["^T",["^S",[["~$ns"],["^U","^1?"]]]]],"^W","Removes the namespace named by the symbol.","^19",["^ ","^12",false,"^1:",2,"^16",2,"^Y",["^S",[["^1?"],["^U","^1?"]]],"^R",["^S",[["^1?"],["^U","^1?"]]],"^11",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/remove-ns","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",16,"^19",["^ ","^12",false,"^1:",2,"^16",2,"^Y",["^S",[["^1?"],["^U","^1?"]]],"^R",["^S",[["^1?"],["^U","^1?"]]],"^11",["^S",[null,null]]],"^Y",["^S",[["^1?"],["^U","^1?"]]],"^10",null,"^1:",2,"^11",["^S",[null,null]],"^N",1,"^12",false,"^1<",[["^ ","^1:",1,"^12",false,"^1=","^1>"],["^ ","^1:",2,"^12",false,"^1=",["^6",[null,"^1>"]]]],"^M",207,"^O",207,"^16",2,"^17",true,"^R",["^S",[["^1?"],["^U","^1?"]]],"^W","Removes the namespace named by the symbol."],"^9",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",185,"^N",7,"^O",185,"^P",17,"^R",["^S",["^T",["^S",[["^1?"],["^U","^1?"]]]]],"^W","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^19",["^ ","^12",false,"^1:",2,"^16",2,"^Y",["^S",[["^1?"],["^U","^1?"]]],"^R",["^S",[["^1?"],["^U","^1?"]]],"^11",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/ns-publics","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",17,"^19",["^ ","^12",false,"^1:",2,"^16",2,"^Y",["^S",[["^1?"],["^U","^1?"]]],"^R",["^S",[["^1?"],["^U","^1?"]]],"^11",["^S",[null,null]]],"^Y",["^S",[["^1?"],["^U","^1?"]]],"^10",null,"^1:",2,"^11",["^S",[null,null]],"^N",1,"^12",false,"^1<",[["^ ","^1:",1,"^12",false,"^1=","^1>"],["^ ","^1:",2,"^12",false,"^1=",["^6",[null,"~$clj","^1>"]]]],"^M",185,"^O",185,"^16",2,"^17",true,"^R",["^S",[["^1?"],["^U","^1?"]]],"^W","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",55,"^N",7,"^O",55,"^P",18,"^R",["^S",["^T",["^S",[[],["^U"]]]]],"^W","Return the compiler options from compiler state.","^19",["^ ","^12",false,"^1:",1,"^16",1,"^Y",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^11",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/get-options","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",18,"^19",["^ ","^12",false,"^1:",1,"^16",1,"^Y",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^11",["^S",[null,null]]],"^Y",["^S",[[],["^U"]]],"^10",null,"^1:",1,"^11",["^S",[null,null]],"^N",1,"^12",false,"^1<",[["^ ","^1:",0,"^12",false,"^1=","^1>"],["^ ","^1:",1,"^12",false,"^1=",["^6",["^1>","~$clj-nil"]]]],"^M",55,"^O",55,"^16",1,"^17",true,"^R",["^S",[[],["^U"]]],"^W","Return the compiler options from compiler state."],"~$in-cljs-user",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",23,"^19",["^ ","^12",true,"^1:",1,"^16",1,"^Y",["^S",[["^S",["^B","^V"]]]],"^R",["^S",[["^B","~$&","^V"]]],"^11",["^S",[null]]],"^N",11,"^M",215,"^Q",true,"^O",215,"^R",["^S",["^T",["^S",[["^B","~$&","^V"]]]]],"^W","Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body."],"^>","~$cljs.analyzer.api/in-cljs-user","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",23,"^19",["^ ","^12",true,"^1:",1,"^16",1,"^Y",["^S",[["^S",["^B","^V"]]]],"^R",["^S",[["^B","~$&","^V"]]],"^11",["^S",[null]]],"^Y",["^S",[["^S",["^B","^V"]]]],"^10",null,"^1:",1,"^11",["^S",[null]],"^N",1,"^12",true,"^1<",[["^ ","^1:",1,"^12",true,"^1=",["^6",["^14","^15"]]]],"^M",215,"^Q",true,"^13","^1>","^O",215,"^16",1,"^17",false,"^R",["^S",[["^B","~$&","^V"]]],"^W","Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body."],"~$warning-enabled?",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",43,"^N",7,"^O",43,"^P",23,"^R",["^S",["^T",["^S",[["~$warning-type"]]]]],"^W","Test if the given warning-type is enabled."],"^>","~$cljs.analyzer.api/warning-enabled?","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",23,"^Y",["^S",[["^1I"]]],"^10",null,"^11",["^S",[null,null]],"^N",1,"^12",false,"^M",43,"^13","^1>","^O",43,"^16",1,"^17",true,"^R",["^S",["^T",["^S",[["^1I"]]]]],"^W","Test if the given warning-type is enabled."],"^:",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",198,"^N",7,"^O",198,"^P",17,"^R",["^S",["^T",["^S",[["^1?","^18"],["^U","^1?","^18"]]]]],"^W","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^19",["^ ","^12",false,"^1:",3,"^16",3,"^Y",["^S",[["^1?","^18"],["^U","^1?","^18"]]],"^R",["^S",[["^1?","^18"],["^U","^1?","^18"]]],"^11",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/ns-resolve","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",17,"^19",["^ ","^12",false,"^1:",3,"^16",3,"^Y",["^S",[["^1?","^18"],["^U","^1?","^18"]]],"^R",["^S",[["^1?","^18"],["^U","^1?","^18"]]],"^11",["^S",[null,null]]],"^Y",["^S",[["^1?","^18"],["^U","^1?","^18"]]],"^10",null,"^1:",3,"^11",["^S",[null,null]],"^N",1,"^12",false,"^1<",[["^ ","^1:",2,"^12",false,"^1=","^1>"],["^ ","^1:",3,"^12",false,"^1=",["^6",[null,"^1>"]]]],"^M",198,"^O",198,"^16",3,"^17",true,"^R",["^S",[["^1?","^18"],["^U","^1?","^18"]]],"^W","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$empty-state",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",20,"^N",7,"^O",20,"^P",18,"^R",["^S",["^T",["^S",[[]]]]],"^W","Creates an empty compilation state Atom<Map>."],"^>","~$cljs.analyzer.api/empty-state","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",18,"^Y",["^S",[[]]],"^10",null,"^11",["^S",[null,null]],"^N",1,"^12",false,"^M",20,"^13","^1>","^O",20,"^16",0,"^17",true,"^R",["^S",["^T",["^S",[[]]]]],"^W","Creates an empty compilation state Atom<Map>."],"~$no-warn",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",18,"^19",["^ ","^12",true,"^1:",0,"^16",0,"^Y",["^S",[["^S",["^V"]]]],"^R",["^S",[["~$&","^V"]]],"^11",["^S",[null]]],"^N",11,"^M",36,"^Q",true,"^O",36,"^R",["^S",["^T",["^S",[["~$&","^V"]]]]],"^W","Disable analyzer warnings for any analysis executed in body."],"^>","~$cljs.analyzer.api/no-warn","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",18,"^19",["^ ","^12",true,"^1:",0,"^16",0,"^Y",["^S",[["^S",["^V"]]]],"^R",["^S",[["~$&","^V"]]],"^11",["^S",[null]]],"^Y",["^S",[["^S",["^V"]]]],"^10",null,"^1:",0,"^11",["^S",[null]],"^N",1,"^12",true,"^1<",[["^ ","^1:",0,"^12",true,"^1=",["^6",["^14","^15"]]]],"^M",36,"^Q",true,"^13","^1>","^O",36,"^16",0,"^17",false,"^R",["^S",[["~$&","^V"]]],"^W","Disable analyzer warnings for any analysis executed in body."],"~$empty-env",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",31,"^N",7,"^O",31,"^P",16,"^R",["^S",["^T",["^S",[[]]]]],"^W","Creates an empty analysis environment."],"^>","~$cljs.analyzer.api/empty-env","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",16,"^Y",["^S",[[]]],"^10",null,"^11",["^S",[null,null]],"^N",1,"^12",false,"^M",31,"^13","^1>","^O",31,"^16",0,"^17",true,"^R",["^S",["^T",["^S",[[]]]]],"^W","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",48,"^N",7,"^O",48,"^P",30,"^R",["^S",["^T",["^S",[["^1I","^B","~$extra"]]]]],"^W","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^>","~$cljs.analyzer.api/default-warning-handler","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",30,"^Y",["^S",[["^1I","^B","^1S"]]],"^10",null,"^11",["^S",[null,null]],"^N",1,"^12",false,"^M",48,"^13",["^6",[null,"^1E"]],"^O",48,"^16",3,"^17",true,"^R",["^S",["^T",["^S",[["^1I","^B","^1S"]]]]],"^W","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^;",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",174,"^N",7,"^O",174,"^P",17,"^R",["^S",["^T",["^S",[["^1?"],["^U","^1?"]]]]],"^W","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^19",["^ ","^12",false,"^1:",2,"^16",2,"^Y",["^S",[["^1?"],["^U","^1?"]]],"^R",["^S",[["^1?"],["^U","^1?"]]],"^11",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/ns-interns","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",17,"^19",["^ ","^12",false,"^1:",2,"^16",2,"^Y",["^S",[["^1?"],["^U","^1?"]]],"^R",["^S",[["^1?"],["^U","^1?"]]],"^11",["^S",[null,null]]],"^Y",["^S",[["^1?"],["^U","^1?"]]],"^10",null,"^1:",2,"^11",["^S",[null,null]],"^N",1,"^12",false,"^1<",[["^ ","^1:",1,"^12",false,"^1=","^1>"],["^ ","^1:",2,"^12",false,"^1=",["^6",[null,"^1>","^1E"]]]],"^M",174,"^O",174,"^16",2,"^17",true,"^R",["^S",[["^1?"],["^U","^1?"]]],"^W","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^<",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",157,"^N",7,"^O",157,"^P",13,"^R",["^S",["^T",["^S",[[],["^U"]]]]],"^W","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^19",["^ ","^12",false,"^1:",1,"^16",1,"^Y",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^11",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/all-ns","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",13,"^19",["^ ","^12",false,"^1:",1,"^16",1,"^Y",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^11",["^S",[null,null]]],"^Y",["^S",[[],["^U"]]],"^10",null,"^1:",1,"^11",["^S",[null,null]],"^N",1,"^12",false,"^1<",[["^ ","^1:",0,"^12",false,"^1=","^1>"],["^ ","^1:",1,"^12",false,"^1=",["^6",["~$cljs.core/KeySeq","^1E"]]]],"^M",157,"^O",157,"^16",1,"^17",true,"^R",["^S",[[],["^U"]]],"^W","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"^=",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",145,"^N",7,"^O",145,"^P",14,"^R",["^S",["^T",["^S",[["^B","^18"]]]]],"^W","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^>","~$cljs.analyzer.api/resolve","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",14,"^Y",["^S",[["^B","^18"]]],"^10",null,"^11",["^S",[null,null]],"^N",1,"^12",false,"^M",145,"^O",145,"^16",2,"^17",true,"^R",["^S",["^T",["^S",[["^B","^18"]]]]],"^W","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^J",null,"^K",["^ ","^L","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^M",61,"^N",7,"^O",61,"^P",19,"^R",["^S",["^T",["^S",[[],["^U"]]]]],"^W","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^19",["^ ","^12",false,"^1:",1,"^16",1,"^Y",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^11",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/get-js-index","^L","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^P",19,"^19",["^ ","^12",false,"^1:",1,"^16",1,"^Y",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^11",["^S",[null,null]]],"^Y",["^S",[[],["^U"]]],"^10",null,"^1:",1,"^11",["^S",[null,null]],"^N",1,"^12",false,"^1<",[["^ ","^1:",0,"^12",false,"^1=",["^6",["^1>","^1E"]]],["^ ","^1:",1,"^12",false,"^1=",["^6",["^1>","^1E"]]]],"^M",61,"^O",61,"^16",1,"^17",true,"^R",["^S",[[],["^U"]]],"^W","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:cljs.analyzer/namespaces","~$cljs.core/binding","~:private","~:macros","~:js-dependency-index","~$cljs.analyzer/*cljs-warnings*","^H","~$cljs.env/with-compiler-env","~:options","^T","~$cljs.analyzer/*cljs-ns*","~$cljs.user"]],"~:order",["^29","^24","^28","^2:","^27","^23","^26","^H","^25","^2;","^T","^2<"]],"^W","This is intended to be a stable api for those who need programmatic access\n  to the analyzer."]