["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$console",["^ ","~$log",["^ "]],"~$document",["^ ","~$createElement",["^ "],"~$body",["^ ","~$appendChild",["^ "],"~$removeChild",["^ "]],"~$execCommand",["^ "]],"~$Object",["^ ","~$value",["^ "],"~$style",["^ ","~$position",["^ "],"~$left",["^ "]],"~$select",["^ "]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.utils.utils","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$default-readers",["^ ","^E","~$day8.re-frame-10x.utils.utils/default-readers","~:file","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","~:line",65,"~:column",1,"~:end-line",65,"~:end-column",21,"~:meta",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",65,"^P",6,"^Q",65,"^R",21],"~:tag","~$cljs.core/IMap"],"~$last-in-vec",["^ ","~:protocol-inline",null,"^S",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",5,"^P",7,"^Q",5,"^R",18,"~:arglists",["~#list",["~$quote",["^Y",[["~$v"]]]]],"~:doc","Get the last element in the vector. Returns nil if v is empty"],"^E","~$day8.re-frame-10x.utils.utils/last-in-vec","^N","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^R",18,"~:method-params",["^Y",[["~$v"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^P",1,"~:variadic?",false,"^O",5,"~:ret-tag",["^D",["~$any","~$clj-nil"]],"^Q",5,"~:max-fixed-arity",1,"~:fn-var",true,"^X",["^Y",["^Z",["^Y",[["~$v"]]]]],"^[","Get the last element in the vector. Returns nil if v is empty"],"~$copy-to-clipboard",["^ ","^W",null,"^S",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",54,"^P",7,"^Q",54,"^R",24,"^X",["^Y",["^Z",["^Y",[["~$text"]]]]]],"^E","~$day8.re-frame-10x.utils.utils/copy-to-clipboard","^N","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^R",24,"^11",["^Y",[["^1;"]]],"^12",null,"^13",["^Y",[null,null]],"^P",1,"^14",false,"^O",54,"^15","~$js","^Q",54,"^18",1,"^19",true,"^X",["^Y",["^Z",["^Y",[["^1;"]]]]]],"~$find-index-in-vec",["^ ","^W",null,"^S",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",18,"^P",7,"^Q",18,"^R",24,"^X",["^Y",["^Z",["^Y",[["~$pred","~$v"]]]]],"^[","Gets the index of the first item in vec that matches the predicate"],"^E","~$day8.re-frame-10x.utils.utils/find-index-in-vec","^N","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^R",24,"^11",["^Y",[["^1?","~$v"]]],"^12",null,"^13",["^Y",[null,null]],"^P",1,"^14",false,"^O",18,"^15",["^D",["^16","^17"]],"^Q",18,"^18",2,"^19",true,"^X",["^Y",["^Z",["^Y",[["^1?","~$v"]]]]],"^[","Gets the index of the first item in vec that matches the predicate"],"~$find-all-indexes-in-vec",["^ ","^W",null,"^S",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",13,"^P",7,"^Q",13,"^R",30,"^X",["^Y",["^Z",["^Y",[["^1?","~$v"]]]]],"^[","Gets the index of all items in vec that match the predicate"],"^E","~$day8.re-frame-10x.utils.utils/find-all-indexes-in-vec","^N","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^R",30,"^11",["^Y",[["^1?","~$v"]]],"^12",null,"^13",["^Y",[null,null]],"^P",1,"^14",false,"^O",13,"^15","^16","^Q",13,"^18",2,"^19",true,"^X",["^Y",["^Z",["^Y",[["^1?","~$v"]]]]],"^[","Gets the index of all items in vec that match the predicate"],"~$diff-link",["^ ","^E","~$day8.re-frame-10x.utils.utils/diff-link","^N","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",3,"^P",1,"^Q",3,"^R",15,"^S",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",3,"^P",6,"^Q",3,"^R",15],"^T","~$string"],"~$spy",["^ ","^W",null,"^S",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",28,"^P",7,"^Q",28,"^R",10,"^X",["^Y",["^Z",["^Y",[["~$x"],["~$label","~$x"]]]]],"~:top-fn",["^ ","^14",false,"~:fixed-arity",2,"^18",2,"^11",["^Y",[["~$x"],["^1G","~$x"]]],"^X",["^Y",[["~$x"],["^1G","~$x"]]],"^13",["^Y",[null,null]]]],"^E","~$day8.re-frame-10x.utils.utils/spy","^N","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^R",10,"^1H",["^ ","^14",false,"^1I",2,"^18",2,"^11",["^Y",[["~$x"],["^1G","~$x"]]],"^X",["^Y",[["~$x"],["^1G","~$x"]]],"^13",["^Y",[null,null]]],"^11",["^Y",[["~$x"],["^1G","~$x"]]],"^12",null,"^1I",2,"^13",["^Y",[null,null]],"^P",1,"^14",false,"~:methods",[["^ ","^1I",1,"^14",false],["^ ","^1I",2,"^14",false]],"^O",28,"^Q",28,"^18",2,"^19",true,"^X",["^Y",[["~$x"],["^1G","~$x"]]]],"~$id-between-xf",["^ ","^W",null,"^S",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",23,"^P",7,"^Q",23,"^R",20,"^X",["^Y",["^Z",["^Y",[["~$beginning","~$ending"]]]]],"^[","Returns a transducer that filters for :id between beginning and ending."],"^E","~$day8.re-frame-10x.utils.utils/id-between-xf","^N","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^R",20,"^11",["^Y",[["^1M","^1N"]]],"^12",null,"^13",["^Y",[null,null]],"^P",1,"^14",false,"^O",23,"^15","~$function","^Q",23,"^18",2,"^19",true,"^X",["^Y",["^Z",["^Y",[["^1M","^1N"]]]]],"^[","Returns a transducer that filters for :id between beginning and ending."],"~$pluralize-",["^ ","^W",null,"^S",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",47,"^P",7,"^Q",47,"^R",17,"^X",["^Y",["^Z",["^Y",[["~$num","~$singular","~$&",["~$plural"]]]]]],"^[","Same as pluralize, but doesn't prepend the number to the pluralized string.","^1H",["^ ","^14",true,"^1I",2,"^18",2,"^11",[["^Y",["^1R","^1S",["^1T"]]]],"^X",["^Y",[["^1R","^1S","~$&",["^1T"]]]],"^13",["^Y",[null]]]],"^E","~$day8.re-frame-10x.utils.utils/pluralize-","^N","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^R",17,"^1H",["^ ","^14",true,"^1I",2,"^18",2,"^11",[["^Y",["^1R","^1S",["^1T"]]]],"^X",["^Y",[["^1R","^1S","~$&",["^1T"]]]],"^13",["^Y",[null]]],"^11",[["^Y",["^1R","^1S",["^1T"]]]],"^12",null,"^1I",2,"^13",["^Y",[null]],"^P",1,"^14",true,"^1K",[["^ ","^1I",2,"^14",true,"^T",["^D",[null,"^16","^1E"]]]],"^O",47,"^15","^16","^Q",47,"^18",2,"^19",true,"^X",["^Y",[["^1R","^1S","~$&",["^1T"]]]],"^[","Same as pluralize, but doesn't prepend the number to the pluralized string."],"~$pluralize",["^ ","^W",null,"^S",["^ ","^N","/Users/sansarip/Dev/yet-another-clojure-web-app-template/posh-test/resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^O",36,"^P",7,"^Q",36,"^R",16,"^X",["^Y",["^Z",["^Y",[["^1R","^1S","~$&",["^1T"]]]]]],"^[","Return a pluralized phrase, appending an s to the singular form if no plural is provided.\n  For example:\n     (pluralize 5 \"month\") => \"5 months\"\n     (pluralize 1 \"month\") => \"1 month\"\n     (pluralize 1 \"radius\" \"radii\") => \"1 radius\"\n     (pluralize 9 \"radius\" \"radii\") => \"9 radii\"\n     From https://github.com/flatland/useful/blob/194950/src/flatland/useful/string.clj#L25-L33","^1H",["^ ","^14",true,"^1I",2,"^18",2,"^11",[["^Y",["^1R","^1S",["^1T"]]]],"^X",["^Y",[["^1R","^1S","~$&",["^1T"]]]],"^13",["^Y",[null]]]],"^E","~$day8.re-frame-10x.utils.utils/pluralize","^N","resources/public/js/compiled/dev/day8/re_frame_10x/utils/utils.cljs","^R",16,"^1H",["^ ","^14",true,"^1I",2,"^18",2,"^11",[["^Y",["^1R","^1S",["^1T"]]]],"^X",["^Y",[["^1R","^1S","~$&",["^1T"]]]],"^13",["^Y",[null]]],"^11",[["^Y",["^1R","^1S",["^1T"]]]],"^12",null,"^1I",2,"^13",["^Y",[null]],"^P",1,"^14",true,"^1K",[["^ ","^1I",2,"^14",true,"^T","^1E"]],"^O",36,"^15","^16","^Q",36,"^18",2,"^19",true,"^X",["^Y",[["^1R","^1S","~$&",["^1T"]]]],"^[","Return a pluralized phrase, appending an s to the singular form if no plural is provided.\n  For example:\n     (pluralize 5 \"month\") => \"5 months\"\n     (pluralize 1 \"month\") => \"1 month\"\n     (pluralize 1 \"radius\" \"radii\") => \"1 radius\"\n     (pluralize 9 \"radius\" \"radii\") => \"9 radii\"\n     From https://github.com/flatland/useful/blob/194950/src/flatland/useful/string.clj#L25-L33"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^D",["~$uuid","~:id"]],"~:order",["^21","^20"]],"^[",null]